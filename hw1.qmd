---
title: "PSTAT220A Homework 1"
format: 
  pdf:
    geometry:
      - top=30mm
      - left=30mm
execute:      
  echo: false
date: "Due 10/13/2025"
---

```{r setup, message=FALSE}
library(tidyverse)
library(lubridate)
library(patchwork)
library(colorspace) 
library(mgcv)
```


## Question 1 (25 pt)

Investigate the relationship between bodyweight, height and age in the data in `height_weight.csv`.  Answer the following questions, supporting your answers with appropriate polished graphs.

a. Make a plots comparing height and weight, colored by age, and faceted by gender.  Describe how weight varies as a function of height (e.g. is it approximiately linear, quadratic, etc?).  Also comment on the variance of weight given age at different ages.

b. Find a transformation of weight that makes the relationship between height and weight more linear.  Make the above plots replacing weight with the transformed weight.  

c. At younger ages, the average heights of girls and boys are the same.  At what age does the average height of boys diverge from the average height of girls?  Support your answer with a clear and well constructed plot. Hint: you may want to use `geom_smooth` to more clearly visualize trends.

```{r, message=FALSE, fig.width=10, fig.asp=0.6, warning=FALSE, out.width="100%"}

body_df <- read_csv("height_weight.csv")
# Your R code here
ggplot(body_df, aes(x = height, y = weight, color = age)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +
  geom_smooth(method = "lm", formula = y ~ poly(x, 2), se = FALSE) +
  facet_wrap(~sex) +
  scale_color_continuous_sequential(palette = "Heat 2")+
  labs(
    title = "Relationship between Height and Weight",
    subtitle = "Faceted by Sex, colored by Age",
    x = "Height ",
    y = "Weight ",
    color = "Age "
  ) +
  theme_bw(base_size = 14)
```
The plot displays two regression lines for each sex, representing both linear and quadratic relationships between age and weight. The quadratic model demonstrates superior fit compared to the linear model for both male and female subjects. Additionally, the analysis reveals heteroscedasticity in the data, as the variance of weight conditional on age is not constant and appears to decrease with increasing age.
```{r, message=FALSE, fig.width=10, fig.asp=0.6, warning=FALSE, out.width="100%"}
body_df <- read_csv("height_weight.csv")
body_df_trans <- body_df %>%
  mutate(
    weight_sqrt   = sqrt(weight),
    weight_log    = log(weight),
  )

ggplot(body_df_trans, aes(x = height, y = weight_sqrt, color = age)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +
  scale_color_continuous_sequential(palette = "Heat 2")+
  labs(
    title = "Relationship between Height and Weight",
    subtitle = "Transformed Weight_sqrt",
    x = "Height ",
    y = "Weight_sqrt ",
    color = "Age "
  ) +
  theme_bw(base_size = 14)

ggplot(body_df_trans, aes(x = height, y = weight_log, color = age)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +
  scale_color_continuous_sequential(palette = "Heat 2")+
  labs(
    title = "Relationship between Height and Weight",
    subtitle = "Transformed Weight_log",
    x = "Height ",
    y = "Weight_log ",
    color = "Age "
  ) +
  theme_bw(base_size = 14)
```
The first plot transforms the weight to the square root of the weight, and the second plot transforms the weight to the natural logarithm of the weight. Both transformations make the relationship between height and weight more linear. However, the natural logarithm transformation is more linear than the square root transformation. As we can see from the plots, the points are more tightly clustered around the regression line in the natural logarithm transformation.
```{r, message=FALSE, fig.width=10, fig.asp=0.6, warning=FALSE, out.width="100%"}
body_df <- read_csv("height_weight.csv")
summary_date <- body_df %>%
  group_by(sex, age) %>%
  summarise(mean_height = mean(height))
ggplot(summary_date, aes(x = age, y = mean_height, color = sex)) +
  geom_point() +
  geom_smooth(method = "gam", formula = y ~ s(x), se = FALSE) +
  scale_color_discrete(palette = "Set1")+
  labs(
    title = "Relationship between Age and Height of Boys and Girls",
    subtitle = "Faceted by Sex",
    x = "Age ",
    y = "Height ",
    color = "Sex "
  ) +
  theme_bw(base_size = 14)
```
As we can see from the plot, the average height of boys and girls is the same at younger ages. However, the average height of boys diverges from the average height of girls at nearly 14 years old.
## Question 2 (20 pt)

The following data are failure times in hours of 45 transmissions from caterpillar tractors belonging to a particular American company:

```{r, echo=TRUE}
failure_times <- c(4381, 3953, 2603, 2320, 1161, 3286, 6914, 4007, 3168,
                   2376, 7498, 3923, 9460, 4525, 2168, 1288, 5085, 2217,
                   6922, 218, 1309, 1875, 1023, 1697, 1038, 3699, 6142,
                   4732, 3330, 4159, 2537, 3814, 2157, 7683, 5539, 4839,
                   6052, 2420, 5556, 309, 1295, 3266, 6679, 1711, 5931)
```

Use QQ-plots to examine the applicability of the following models for the probability distribution of failure time: normal, lognormal, exponential and Gamma (hint: check out the function `fitdistr` in the library MASS to fit these distributions. You may rescale the data if you have numerical problems). For the model that fits best (explain how you determine which model fits best), plot the PDF and the kernel density estimate of the data on the same plot.

```{r, message=FALSE, fig.width=10, fig.asp=0.6, warning=FALSE, out.width="100%"}
# Your R code library(MASS)
library(MASS)
x <- failure_times / 1000

fit_norm <- fitdistr(x, "normal")
fit_logn <- fitdistr(x, "lognormal")
fit_exp  <- fitdistr(x, "exponential")
shape0 <- mean(x)^2 / var(x)
rate0  <- mean(x) / var(x)
fit_gam  <- fitdistr(x, "gamma", start = list(shape = shape0, rate = rate0))

op <- par(mfrow=c(2,2), mar=c(4,4,2,1))
n <- length(x); p <- ppoints(n); xs <- sort(x)

qN <- qnorm(p, mean=fit_norm$estimate["mean"], sd=fit_norm$estimate["sd"])
plot(qN, xs, main="Normal QQ", xlab="Theoretical", ylab="Sample"); abline(0,1,col=2)

qLN <- qlnorm(p, meanlog=fit_logn$estimate["meanlog"], sdlog=fit_logn$estimate["sdlog"])
plot(qLN, xs, main="Lognormal QQ", xlab="Theoretical", ylab="Sample"); abline(0,1,col=2)

qE <- qexp(p, rate=fit_exp$estimate["rate"])
plot(qE, xs, main="Exponential QQ", xlab="Theoretical", ylab="Sample"); abline(0,1,col=2)

qG <- qgamma(p, shape=fit_gam$estimate["shape"], rate=fit_gam$estimate["rate"])
plot(qG, xs, main="Gamma QQ", xlab="Theoretical", ylab="Sample"); abline(0,1,col=2)
par(op)
aic <- c(
  normal     = 2*2 - 2*fit_norm$loglik,
  lognormal  = 2*2 - 2*fit_logn$loglik,
  exponential= 2*1 - 2*fit_exp$loglik,
  gamma      = 2*2 - 2*fit_gam$loglik
)
aic

best <- names(which.min(aic))
best

# Overlay KDE and fitted PDF of the best model
dens <- density(x)
grid <- seq(min(x), max(x), length.out = 400)

pdf_y <- switch(best,
  normal       = dnorm(grid, mean = fit_norm$estimate["mean"], sd = fit_norm$estimate["sd"]),
  lognormal    = dlnorm(grid, meanlog = fit_logn$estimate["meanlog"], sdlog = fit_logn$estimate["sdlog"]),
  exponential  = dexp(grid, rate = fit_exp$estimate["rate"]),
  gamma        = dgamma(grid, shape = fit_gam$estimate["shape"], rate = fit_gam$estimate["rate"])
)

ggplot() +
  geom_line(aes(x = dens$x, y = dens$y), color = "#377eb8", linewidth = 1.1) +
  geom_line(aes(x = grid, y = pdf_y), color = "#e41a1c", linewidth = 1.1) +
  labs(
    title = paste("KDE (blue) vs Fitted", best, "PDF (red)"),
    x = "Failure time (10^3 hours)",
    y = "Density"
  ) +
  theme_bw(base_size = 14)

```

## Question 3 (15 pt)

Generate 600 random samples from the normal distribution with mean 10 and standard deviation 5. Divide these 600 samples into 100 groups each with 6 samples. Compute the statistic $(\bar{X} - 10)/\sqrt{S^2/6}$ for each group. What kind of distribution do you expect this statistic to follow?

Using the 100 such statistics verify that the empirical distribution of these statistics actually follows the expected distribution.

```{r}
# Your R code here
```


## Question 4 (40 pt)

This question considers the analysis of U.S. birth data.  The data consists of the numbers of infants born in each month from 2016 through 2023 separated by state and race/ethnicity.  The data also includes the number of women age 15-44 in each state and race/ethnicity (the `denom` variables).  The prefix in the column variables indicates the race/ethnicity and the suffix indicates whether the variable tracks births or number of women.

```{r, echo=TRUE}
birth_data <- read_csv("birth_data-1.csv", show_col_types = FALSE)
head(birth_data)
```


a. Use `pivot_longer` to make the data tidy.  Hint: you need to simultaneously pivot on `birth` columns and `denom` columns.  To do so read the documentation for `pivot_longer` and use `.value` in the `names_to` argument (see e.g. the last example in the documentation).  It might also help to use `names_sep`.  After tidying, your data set should have 7 columns: `state`, `state_code`, `year`, `month`, `race`, `births` and `denom`. Print the first 10 rows and last 10 rows of your tidy data.

```{r}
## Your code here
```


b.  Create two new variable: `date` and `birth_rate`.  To create `date`, use the `my` function from the `lubridate` package which takes a string consisting of the month followed by the year and returns the appropriate date object. `birth_rate` should have units of births per 1000 women 15-44 per year (note: don't forget to adjust for the fact that we have monthly data.  As a reference, the national fertility rate is about 55 births per 1000 women aged 15-44 per year). Use the tidy data you just computed to plot the birth rate in California vs `date`.  You should have lines with distinct colors for the birth rate in each race and overall.  Which race/ethnicities tend to have the highest birth rates? Lowest?

```{r}
# Your code here
```

c.  Create a new variable using `mutate` which corresponds to the *relative* birth rate for each race category.  The relative birth rate should be computed by grouping by race, taking the birth rate and dividing by the mean birth rate for that race over the full range of data and then ungrouping again. Plot the relative birth rates for all races on the same plot. What new observations do you make about the data when plotting the relative birth rate? Are any patterns clearer in this plot than they were in the previous plot?

```{r}
## Your code here
```


d. Make a visualization of your choice that clearly highlights something about the data that was not evident in the previous plots.  For example, you can explore seasonality in the trends or variation across race and/or states. Describe what you learned from your plot. The best visualizations will be shared in class (given your approval).

```{r}
## Your code here
```

